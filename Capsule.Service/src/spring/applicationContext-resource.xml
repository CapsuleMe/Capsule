<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:flex="http://www.springframework.org/schema/flex"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

  <!-- DataSource -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <!-- 连接池启动时的初始值 -->
    <property name="initialSize" value="${jdbc.initConnections}" />
    <!-- 连接池的最大值 -->
    <property name="maxActive" value="${jdbc.poolSize}" />
    <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
    <property name="maxIdle" value="2" />
    <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
    <property name="minIdle" value="1" />
    <!-- 是否自动回收超时连接 -->
    <property name="removeAbandoned" value="true" />
    <!--  设置被遗弃的连接的超时的时间（以秒数为单位），即当一个连接被遗弃的时间超过设置的时间，则它会自动转换成可利用的连接。默认的超时时间是300秒-->
    <property name="removeAbandonedTimeout" value="30" />
    <!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
    <property name="logAbandoned" value="true" />
    <property name="validationQuery" value="select 1" />
    <property name="testOnBorrow" value="true" />
    <property name="testWhileIdle" value="true" />
    <property name="timeBetweenEvictionRunsMillis" value="3600000" />
    <property name="minEvictableIdleTimeMillis" value="18000000" />
  </bean>
  
    <!-- 读取ibatis配置文件 -->
  <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="configLocation">
      <value>classpath:ibatis/ibatis-config.xml</value>
    </property>
  </bean>
   <!--事务配置 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>
  
  <!-- preinst 切入点 -->
    <!-- Spring AOP config
  <aop:config proxy-target-class="true">
    
    <aop:pointcut id="transactionPointcut" expression="execution(* com.capsule.service..*.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut" />
  </aop:config>
  
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED"/>
      <tx:method name="is*" read-only="true" propagation="NOT_SUPPORTED"/>
      <tx:method name="check*" read-only="true" propagation="NOT_SUPPORTED"/>
      <tx:method name="add*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="Exception"/>
      <tx:method name="insert*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="Exception"/>
      <tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="Exception"/>
      <tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="Exception"/>
      <tx:method name="*" propagation="REQUIRED" isolation="REPEATABLE_READ" rollback-for="Exception"/>
    </tx:attributes>
  </tx:advice>
   -->
</beans>